model Core driver EMF {nsuri = "org.amma.dsl.jdt.core"};
model DOM driver EMF {nsuri = "org.amma.dsl.jdt.dom"};
model PrimitiveTypes driver EMF {nsuri = "org.amma.dsl.jdt.primitiveTypes"};
var size = 0;
var iJavaModel = IJavaModel.all.first;
size = size + IJavaModel.all.path.size();
size = size + IJavaModel.all.isReadOnly.size();
size = size + IJavaModel.all.size();
var methodInvocation = MethodInvocation.all.first;
size = size + MethodInvocation.all.resolveBoxing.size();
size = size + MethodInvocation.all.resolveUnboxing.size();
size = size + MethodInvocation.all.size();
size = size + IType.all.size();
size = size + IMethod.all.size();
var modifier = Modifier.all.first;
size = size + Modifier.all.abstract.size();
size = size + Modifier.all.final.size();
size = size + Modifier.all.native.size();
size = size + Modifier.all.none.size();
size = size + Modifier.all.private.size();
size = size + Modifier.all.protected.size();
size = size + Modifier.all.public.size();
size = size + Modifier.all.static.size();
size = size + Modifier.all.strictfp.size();
size = size + Modifier.all.synchronized.size();
size = size + Modifier.all.transient.size();
size = size + Modifier.all.volatile.size();
size = size + Modifier.all.size();
var variableDeclarationFragment = VariableDeclarationFragment.all.first;
size = size + VariableDeclarationFragment.all.extraDimensions.size();
size = size + VariableDeclarationFragment.all.size();
var qualifiedName = QualifiedName.all.first;
size = size + QualifiedName.all.resolveBoxing.size();
size = size + QualifiedName.all.resolveUnboxing.size();
size = size + QualifiedName.all.fullyQualifiedName.size();
size = size + QualifiedName.all.size();
size = size + IType.all.size();
var parameterizedType = ParameterizedType.all.first;
size = size + ParameterizedType.all.size();
var binaryPackageFragmentRoot = BinaryPackageFragmentRoot.all.first;
size = size + BinaryPackageFragmentRoot.all.elementName.size();
size = size + BinaryPackageFragmentRoot.all.path.size();
size = size + BinaryPackageFragmentRoot.all.isReadOnly.size();
size = size + BinaryPackageFragmentRoot.all.size();
size.println();
