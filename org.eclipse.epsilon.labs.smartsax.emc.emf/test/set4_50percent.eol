model Core driver EMF {nsuri = "org.amma.dsl.jdt.core"};
model DOM driver EMF {nsuri = "org.amma.dsl.jdt.dom"};
model PrimitiveTypes driver EMF {nsuri = "org.amma.dsl.jdt.primitiveTypes"};

var size = 0;
var stringLiteral = StringLiteral.all.first;
size = size + StringLiteral.all.size();
var numberLiteral = NumberLiteral.all.first;
size = size + NumberLiteral.all.size();
var continueStatement = ContinueStatement.all.first;
size = size + ContinueStatement.all.size();
var enhancedForStatement = EnhancedForStatement.all.first;
size = size + EnhancedForStatement.all.size();
var initializer = Initializer.all.first;
size = size + Initializer.all.size();
var typeDeclarationStatement = TypeDeclarationStatement.all.first;
size = size + TypeDeclarationStatement.all.size();
var sourcePackageFragmentRoot = SourcePackageFragmentRoot.all.first;
size = size + SourcePackageFragmentRoot.all.size();
var simpleType = SimpleType.all.first;
size = size + SimpleType.all.size();
var simpleName = SimpleName.all.first;
size = size + SimpleName.all.size();
var textElement = TextElement.all.first;
size = size + TextElement.all.size();
var forStatement = ForStatement.all.first;
size = size + ForStatement.all.size();
var methodRefParameter = MethodRefParameter.all.first;
size = size + MethodRefParameter.all.size();
var iJavaModel = IJavaModel.all.first;
size = size + IJavaModel.all.size();
var methodDeclaration = MethodDeclaration.all.first;
size = size + MethodDeclaration.all.size();
var typeParameter = TypeParameter.all.first;
size = size + TypeParameter.all.size();
var nullLiteral = NullLiteral.all.first;
size = size + NullLiteral.all.size();
var iJavaProject = IJavaProject.all.first;
size = size + IJavaProject.all.size();
var binaryPackageFragmentRoot = BinaryPackageFragmentRoot.all.first;
size = size + BinaryPackageFragmentRoot.all.size();
var classInstanceCreation = ClassInstanceCreation.all.first;
size = size + ClassInstanceCreation.all.size();
var iCompilationUnit = ICompilationUnit.all.first;
size = size + ICompilationUnit.all.size();
var methodRef = MethodRef.all.first;
size = size + MethodRef.all.size();
var enumConstantDeclaration = EnumConstantDeclaration.all.first;
size = size + EnumConstantDeclaration.all.size();
var tryStatement = TryStatement.all.first;
size = size + TryStatement.all.size();
var superConstructorInvocation = SuperConstructorInvocation.all.first;
size = size + SuperConstructorInvocation.all.size();
var singleMemberAnnotation = SingleMemberAnnotation.all.first;
size = size + SingleMemberAnnotation.all.size();
var emptyStatement = EmptyStatement.all.first;
size = size + EmptyStatement.all.size();
var iType = IType.all.first;
size = size + IType.all.size();
var synchronizedStatement = SynchronizedStatement.all.first;
size = size + SynchronizedStatement.all.size();
var labeledStatement = LabeledStatement.all.first;
size = size + LabeledStatement.all.size();
var markerAnnotation = MarkerAnnotation.all.first;
size = size + MarkerAnnotation.all.size();
var iInitializer = IInitializer.all.first;
size = size + IInitializer.all.size();
var doStatement = DoStatement.all.first;
size = size + DoStatement.all.size();
var assertStatement = AssertStatement.all.first;
size = size + AssertStatement.all.size();
var constructorInvocation = ConstructorInvocation.all.first;
size = size + ConstructorInvocation.all.size();
var iPackageFragment = IPackageFragment.all.first;
size = size + IPackageFragment.all.size();
var enumDeclaration = EnumDeclaration.all.first;
size = size + EnumDeclaration.all.size();
var wildcardType = WildcardType.all.first;
size = size + WildcardType.all.size();
size.println();
m.allContents().size().println();
