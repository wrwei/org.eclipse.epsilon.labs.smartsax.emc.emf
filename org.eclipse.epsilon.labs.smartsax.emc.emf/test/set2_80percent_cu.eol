model Core driver EMF {nsuri = "org.amma.dsl.jdt.core"};
model DOM driver EMF {nsuri = "org.amma.dsl.jdt.dom"};
model PrimitiveTypes driver EMF {nsuri = "org.amma.dsl.jdt.primitiveTypes"};
var size = 0;
var infixExpression = InfixExpression.all.first;
size = size + InfixExpression.all.resolveBoxing.size();
size = size + InfixExpression.all.resolveUnboxing.size();
size = size + InfixExpression.all.operator.size();
size = size + InfixExpression.all.size();
size = size + IType.all.size();
var qualifiedName = QualifiedName.all.first;
size = size + QualifiedName.all.resolveBoxing.size();
size = size + QualifiedName.all.resolveUnboxing.size();
size = size + QualifiedName.all.fullyQualifiedName.size();
size = size + QualifiedName.all.size();
size = size + IType.all.size();
var variableDeclarationFragment = VariableDeclarationFragment.all.first;
size = size + VariableDeclarationFragment.all.extraDimensions.size();
size = size + VariableDeclarationFragment.all.size();
var fieldAccess = FieldAccess.all.first;
size = size + FieldAccess.all.resolveBoxing.size();
size = size + FieldAccess.all.resolveUnboxing.size();
size = size + FieldAccess.all.size();
size = size + IType.all.size();
var labeledStatement = LabeledStatement.all.first;
size = size + LabeledStatement.all.size();
var simpleName = SimpleName.all.first;
size = size + SimpleName.all.resolveBoxing.size();
size = size + SimpleName.all.resolveUnboxing.size();
size = size + SimpleName.all.fullyQualifiedName.size();
size = size + SimpleName.all.identifier.size();
size = size + SimpleName.all.declaration.size();
size = size + SimpleName.all.size();
size = size + IType.all.size();
var block = Block.all.first;
size = size + Block.all.size();
var iField = IField.all.first;
size = size + IField.all.elementName.size();
size = size + IField.all.source.size();
size = size + IField.all.constant.size();
size = size + IField.all.isEnumConstant.size();
size = size + IField.all.typeSignature.size();
size = size + IField.all.isVolatile.size();
size = size + IField.all.isTransient.size();
size = size + IField.all.size();
var singleVariableDeclaration = SingleVariableDeclaration.all.first;
size = size + SingleVariableDeclaration.all.extraDimensions.size();
size = size + SingleVariableDeclaration.all.varargs.size();
size = size + SingleVariableDeclaration.all.size();
var parameter = Parameter.all.first;
size = size + Parameter.all.name.size();
size = size + Parameter.all.type.size();
size = size + Parameter.all.size();
var assignment = Assignment.all.first;
size = size + Assignment.all.resolveBoxing.size();
size = size + Assignment.all.resolveUnboxing.size();
size = size + Assignment.all.operator.size();
size = size + Assignment.all.size();
size = size + IType.all.size();
var numberLiteral = NumberLiteral.all.first;
size = size + NumberLiteral.all.resolveBoxing.size();
size = size + NumberLiteral.all.resolveUnboxing.size();
size = size + NumberLiteral.all.token.size();
size = size + NumberLiteral.all.size();
size = size + IType.all.size();
var variableDeclarationStatement = VariableDeclarationStatement.all.first;
size = size + VariableDeclarationStatement.all.size();
var iJavaModel = IJavaModel.all.first;
size = size + IJavaModel.all.path.size();
size = size + IJavaModel.all.isReadOnly.size();
size = size + IJavaModel.all.size();
var methodInvocation = MethodInvocation.all.first;
size = size + MethodInvocation.all.resolveBoxing.size();
size = size + MethodInvocation.all.resolveUnboxing.size();
size = size + MethodInvocation.all.size();
size = size + IType.all.size();
size = size + IMethod.all.size();
var expressionStatement = ExpressionStatement.all.first;
size = size + ExpressionStatement.all.size();
var modifier = Modifier.all.first;
size = size + Modifier.all.abstract.size();
size = size + Modifier.all.final.size();
size = size + Modifier.all.native.size();
size = size + Modifier.all.none.size();
size = size + Modifier.all.private.size();
size = size + Modifier.all.protected.size();
size = size + Modifier.all.public.size();
size = size + Modifier.all.static.size();
size = size + Modifier.all.strictfp.size();
size = size + Modifier.all.synchronized.size();
size = size + Modifier.all.transient.size();
size = size + Modifier.all.volatile.size();
size = size + Modifier.all.size();
var typeDeclarationStatement = TypeDeclarationStatement.all.first;
size = size + TypeDeclarationStatement.all.size();
var arrayCreation = ArrayCreation.all.first;
size = size + ArrayCreation.all.resolveBoxing.size();
size = size + ArrayCreation.all.resolveUnboxing.size();
size = size + ArrayCreation.all.size();
size = size + IType.all.size();
var methodDeclaration = MethodDeclaration.all.first;
size = size + MethodDeclaration.all.extraDimensions.size();
size = size + MethodDeclaration.all.constructor.size();
size = size + MethodDeclaration.all.varargs.size();
size = size + MethodDeclaration.all.size();
size = size + IMethod.all.size();
var simpleType = SimpleType.all.first;
size = size + SimpleType.all.size();
size.println();
