model Core driver EMF {nsuri = "org.amma.dsl.jdt.core"};
model DOM driver EMF {nsuri = "org.amma.dsl.jdt.dom"};
model PrimitiveTypes driver EMF {nsuri = "org.amma.dsl.jdt.primitiveTypes"};
var size = 0;
var qualifiedName = QualifiedName.all.first;
size = size + QualifiedName.all.resolveBoxing.size();
size = size + QualifiedName.all.resolveUnboxing.size();
size = size + QualifiedName.all.typeBinding.size();
size = size + QualifiedName.all.fullyQualifiedName.size();
size = size + QualifiedName.all.name.size();
size = size + QualifiedName.all.qualifier.size();
size = size + QualifiedName.all.size();
var methodDeclaration = MethodDeclaration.all.first;
size = size + MethodDeclaration.all.modifiers.size();
size = size + MethodDeclaration.all.javadoc.size();
size = size + MethodDeclaration.all.body.size();
size = size + MethodDeclaration.all.extraDimensions.size();
size = size + MethodDeclaration.all.name.size();
size = size + MethodDeclaration.all.returnType.size();
size = size + MethodDeclaration.all.constructor.size();
size = size + MethodDeclaration.all.varargs.size();
size = size + MethodDeclaration.all.parameters.size();
size = size + MethodDeclaration.all.thrownExceptions.size();
size = size + MethodDeclaration.all.typeParameters.size();
size = size + MethodDeclaration.all.binding.size();
size = size + MethodDeclaration.all.size();
size = size + IMethod.all.size();
var labeledStatement = LabeledStatement.all.first;
size = size + LabeledStatement.all.body.size();
size = size + LabeledStatement.all.label.size();
size = size + LabeledStatement.all.size();
var simpleName = SimpleName.all.first;
size = size + SimpleName.all.resolveBoxing.size();
size = size + SimpleName.all.resolveUnboxing.size();
size = size + SimpleName.all.typeBinding.size();
size = size + SimpleName.all.fullyQualifiedName.size();
size = size + SimpleName.all.identifier.size();
size = size + SimpleName.all.declaration.size();
size = size + SimpleName.all.size();
var iJavaModel = IJavaModel.all.first;
size = size + IJavaModel.all.path.size();
size = size + IJavaModel.all.isReadOnly.size();
size = size + IJavaModel.all.javaProjects.size();
size = size + IJavaModel.all.externalPackageFragmentRoots.size();
size = size + IJavaModel.all.size();
var ifStatement = IfStatement.all.first;
size = size + IfStatement.all.elseStatement.size();
size = size + IfStatement.all.expression.size();
size = size + IfStatement.all.thenStatement.size();
size = size + IfStatement.all.size();
var modifier = Modifier.all.first;
size = size + Modifier.all.abstract.size();
size = size + Modifier.all.final.size();
size = size + Modifier.all.native.size();
size = size + Modifier.all.none.size();
size = size + Modifier.all.private.size();
size = size + Modifier.all.protected.size();
size = size + Modifier.all.public.size();
size = size + Modifier.all.static.size();
size = size + Modifier.all.strictfp.size();
size = size + Modifier.all.synchronized.size();
size = size + Modifier.all.transient.size();
size = size + Modifier.all.volatile.size();
size = size + Modifier.all.size();
var emptyStatement = EmptyStatement.all.first;
size = size + EmptyStatement.all.size();
var compilationUnit = CompilationUnit.all.first;
size = size + CompilationUnit.all.comments.size();
size = size + CompilationUnit.all.package.size();
size = size + CompilationUnit.all.imports.size();
size = size + CompilationUnit.all.types.size();
size = size + CompilationUnit.all.size();
size.println();

