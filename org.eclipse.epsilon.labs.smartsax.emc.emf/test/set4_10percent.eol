model Core driver EMF {nsuri = "org.amma.dsl.jdt.core"};
model DOM driver EMF {nsuri = "org.amma.dsl.jdt.dom"};
model PrimitiveTypes driver EMF {nsuri = "org.amma.dsl.jdt.primitiveTypes"};

var size = 0;
var primitiveType = PrimitiveType.all.first;
size = size + PrimitiveType.all.size();
var methodRef = MethodRef.all.first;
size = size + MethodRef.all.size();
var enhancedForStatement = EnhancedForStatement.all.first;
size = size + EnhancedForStatement.all.size();
var iField = IField.all.first;
size = size + IField.all.size();
var conditionalExpression = ConditionalExpression.all.first;
size = size + ConditionalExpression.all.size();
var tryStatement = TryStatement.all.first;
size = size + TryStatement.all.size();
var methodInvocation = MethodInvocation.all.first;
size = size + MethodInvocation.all.size();
var whileStatement = WhileStatement.all.first;
size = size + WhileStatement.all.size();
var iType = IType.all.first;
size = size + IType.all.size();
var assertStatement = AssertStatement.all.first;
size = size + AssertStatement.all.size();
var superMethodInvocation = SuperMethodInvocation.all.first;
size = size + SuperMethodInvocation.all.size();
var emptyStatement = EmptyStatement.all.first;
size = size + EmptyStatement.all.size();
var methodDeclaration = MethodDeclaration.all.first;
size = size + MethodDeclaration.all.size();
var enumConstantDeclaration = EnumConstantDeclaration.all.first;
size = size + EnumConstantDeclaration.all.size();
var labeledStatement = LabeledStatement.all.first;
size = size + LabeledStatement.all.size();
var singleMemberAnnotation = SingleMemberAnnotation.all.first;
size = size + SingleMemberAnnotation.all.size();
var typeDeclarationStatement = TypeDeclarationStatement.all.first;
size = size + TypeDeclarationStatement.all.size();
var markerAnnotation = MarkerAnnotation.all.first;
size = size + MarkerAnnotation.all.size();
var typeDeclaration = TypeDeclaration.all.first;
size = size + TypeDeclaration.all.size();
var binaryPackageFragmentRoot = BinaryPackageFragmentRoot.all.first;
size = size + BinaryPackageFragmentRoot.all.size();
var throwStatement = ThrowStatement.all.first;
size = size + ThrowStatement.all.size();
var doStatement = DoStatement.all.first;
size = size + DoStatement.all.size();
var postfixExpression = PostfixExpression.all.first;
size = size + PostfixExpression.all.size();
var continueStatement = ContinueStatement.all.first;
size = size + ContinueStatement.all.size();
var sourcePackageFragmentRoot = SourcePackageFragmentRoot.all.first;
size = size + SourcePackageFragmentRoot.all.size();
var iJavaProject = IJavaProject.all.first;
size = size + IJavaProject.all.size();
var iPackageFragment = IPackageFragment.all.first;
size = size + IPackageFragment.all.size();
var iJavaModel = IJavaModel.all.first;
size = size + IJavaModel.all.size();
var synchronizedStatement = SynchronizedStatement.all.first;
size = size + SynchronizedStatement.all.size();
var wildcardType = WildcardType.all.first;
size = size + WildcardType.all.size();
var iInitializer = IInitializer.all.first;
size = size + IInitializer.all.size();
var typeParameter = TypeParameter.all.first;
size = size + TypeParameter.all.size();
var enumDeclaration = EnumDeclaration.all.first;
size = size + EnumDeclaration.all.size();
size.println();
m.allContents().size().println();
