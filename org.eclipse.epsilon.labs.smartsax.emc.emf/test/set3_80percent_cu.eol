model Core driver EMF {nsuri = "org.amma.dsl.jdt.core"};
model DOM driver EMF {nsuri = "org.amma.dsl.jdt.dom"};
model PrimitiveTypes driver EMF {nsuri = "org.amma.dsl.jdt.primitiveTypes"};
var size = 0;
var singleVariableDeclaration = SingleVariableDeclaration.all.first;
size = size + SingleVariableDeclaration.all.extraDimensions.size();
size = size + SingleVariableDeclaration.all.initializer.size();
size = size + SingleVariableDeclaration.all.name.size();
size = size + SingleVariableDeclaration.all.type.size();
size = size + SingleVariableDeclaration.all.varargs.size();
size = size + SingleVariableDeclaration.all.modifiers.size();
size = size + SingleVariableDeclaration.all.size();
var qualifiedName = QualifiedName.all.first;
size = size + QualifiedName.all.resolveBoxing.size();
size = size + QualifiedName.all.resolveUnboxing.size();
size = size + QualifiedName.all.typeBinding.size();
size = size + QualifiedName.all.fullyQualifiedName.size();
size = size + QualifiedName.all.name.size();
size = size + QualifiedName.all.qualifier.size();
size = size + QualifiedName.all.size();
var markerAnnotation = MarkerAnnotation.all.first;
size = size + MarkerAnnotation.all.resolveBoxing.size();
size = size + MarkerAnnotation.all.resolveUnboxing.size();
size = size + MarkerAnnotation.all.typeBinding.size();
size = size + MarkerAnnotation.all.typeName.size();
size = size + MarkerAnnotation.all.size();
var block = Block.all.first;
size = size + Block.all.statements.size();
size = size + Block.all.size();
var simpleName = SimpleName.all.first;
size = size + SimpleName.all.resolveBoxing.size();
size = size + SimpleName.all.resolveUnboxing.size();
size = size + SimpleName.all.typeBinding.size();
size = size + SimpleName.all.fullyQualifiedName.size();
size = size + SimpleName.all.identifier.size();
size = size + SimpleName.all.declaration.size();
size = size + SimpleName.all.size();
var iJavaModel = IJavaModel.all.first;
size = size + IJavaModel.all.path.size();
size = size + IJavaModel.all.isReadOnly.size();
size = size + IJavaModel.all.javaProjects.size();
size = size + IJavaModel.all.externalPackageFragmentRoots.size();
size = size + IJavaModel.all.size();
var expressionStatement = ExpressionStatement.all.first;
size = size + ExpressionStatement.all.expression.size();
size = size + ExpressionStatement.all.size();
var anonymousClassDeclaration = AnonymousClassDeclaration.all.first;
size = size + AnonymousClassDeclaration.all.bodyDeclarations.size();
size = size + AnonymousClassDeclaration.all.size();
var variableDeclarationFragment = VariableDeclarationFragment.all.first;
size = size + VariableDeclarationFragment.all.extraDimensions.size();
size = size + VariableDeclarationFragment.all.initializer.size();
size = size + VariableDeclarationFragment.all.name.size();
size = size + VariableDeclarationFragment.all.size();
var fieldDeclaration = FieldDeclaration.all.first;
size = size + FieldDeclaration.all.modifiers.size();
size = size + FieldDeclaration.all.javadoc.size();
size = size + FieldDeclaration.all.fragments.size();
size = size + FieldDeclaration.all.type.size();
size = size + FieldDeclaration.all.size();
var methodInvocation = MethodInvocation.all.first;
size = size + MethodInvocation.all.resolveBoxing.size();
size = size + MethodInvocation.all.resolveUnboxing.size();
size = size + MethodInvocation.all.typeBinding.size();
size = size + MethodInvocation.all.arguments.size();
size = size + MethodInvocation.all.expression.size();
size = size + MethodInvocation.all.name.size();
size = size + MethodInvocation.all.typeArguments.size();
size = size + MethodInvocation.all.methodBinding.size();
size = size + MethodInvocation.all.size();
size = size + IMethod.all.size();
var variableDeclarationStatement = VariableDeclarationStatement.all.first;
size = size + VariableDeclarationStatement.all.fragments.size();
size = size + VariableDeclarationStatement.all.modifiers.size();
size = size + VariableDeclarationStatement.all.type.size();
size = size + VariableDeclarationStatement.all.size();
var methodDeclaration = MethodDeclaration.all.first;
size = size + MethodDeclaration.all.modifiers.size();
size = size + MethodDeclaration.all.javadoc.size();
size = size + MethodDeclaration.all.body.size();
size = size + MethodDeclaration.all.extraDimensions.size();
size = size + MethodDeclaration.all.name.size();
size = size + MethodDeclaration.all.returnType.size();
size = size + MethodDeclaration.all.constructor.size();
size = size + MethodDeclaration.all.varargs.size();
size = size + MethodDeclaration.all.parameters.size();
size = size + MethodDeclaration.all.thrownExceptions.size();
size = size + MethodDeclaration.all.typeParameters.size();
size = size + MethodDeclaration.all.binding.size();
size = size + MethodDeclaration.all.size();
size = size + IMethod.all.size();
var simpleType = SimpleType.all.first;
size = size + SimpleType.all.name.size();
size = size + SimpleType.all.size();
var infixExpression = InfixExpression.all.first;
size = size + InfixExpression.all.resolveBoxing.size();
size = size + InfixExpression.all.resolveUnboxing.size();
size = size + InfixExpression.all.typeBinding.size();
size = size + InfixExpression.all.extendedOperands.size();
size = size + InfixExpression.all.leftOperand.size();
size = size + InfixExpression.all.operator.size();
size = size + InfixExpression.all.rightOperand.size();
size = size + InfixExpression.all.size();
var modifier = Modifier.all.first;
size = size + Modifier.all.abstract.size();
size = size + Modifier.all.final.size();
size = size + Modifier.all.native.size();
size = size + Modifier.all.none.size();
size = size + Modifier.all.private.size();
size = size + Modifier.all.protected.size();
size = size + Modifier.all.public.size();
size = size + Modifier.all.static.size();
size = size + Modifier.all.strictfp.size();
size = size + Modifier.all.synchronized.size();
size = size + Modifier.all.transient.size();
size = size + Modifier.all.volatile.size();
size = size + Modifier.all.size();
var emptyStatement = EmptyStatement.all.first;
size = size + EmptyStatement.all.size();
size.println();

