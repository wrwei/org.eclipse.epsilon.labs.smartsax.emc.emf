model Core driver EMF {nsuri = "org.amma.dsl.jdt.core"};
model DOM driver EMF {nsuri = "org.amma.dsl.jdt.dom"};
model PrimitiveTypes driver EMF {nsuri = "org.amma.dsl.jdt.primitiveTypes"};

var size = 0;
var continueStatement = ContinueStatement.all.first;
size = size + ContinueStatement.all.size();
var enumDeclaration = EnumDeclaration.all.first;
size = size + EnumDeclaration.all.size();
var tagElement = TagElement.all.first;
size = size + TagElement.all.size();
var labeledStatement = LabeledStatement.all.first;
size = size + LabeledStatement.all.size();
var variableDeclarationStatement = VariableDeclarationStatement.all.first;
size = size + VariableDeclarationStatement.all.size();
var enumConstantDeclaration = EnumConstantDeclaration.all.first;
size = size + EnumConstantDeclaration.all.size();
var anonymousClassDeclaration = AnonymousClassDeclaration.all.first;
size = size + AnonymousClassDeclaration.all.size();
var sourcePackageFragmentRoot = SourcePackageFragmentRoot.all.first;
size = size + SourcePackageFragmentRoot.all.size();
var textElement = TextElement.all.first;
size = size + TextElement.all.size();
var classInstanceCreation = ClassInstanceCreation.all.first;
size = size + ClassInstanceCreation.all.size();
var iPackageFragment = IPackageFragment.all.first;
size = size + IPackageFragment.all.size();
var fieldAccess = FieldAccess.all.first;
size = size + FieldAccess.all.size();
var superConstructorInvocation = SuperConstructorInvocation.all.first;
size = size + SuperConstructorInvocation.all.size();
var arrayCreation = ArrayCreation.all.first;
size = size + ArrayCreation.all.size();
var switchStatement = SwitchStatement.all.first;
size = size + SwitchStatement.all.size();
var compilationUnit = CompilationUnit.all.first;
size = size + CompilationUnit.all.size();
var parameterizedType = ParameterizedType.all.first;
size = size + ParameterizedType.all.size();
var whileStatement = WhileStatement.all.first;
size = size + WhileStatement.all.size();
var postfixExpression = PostfixExpression.all.first;
size = size + PostfixExpression.all.size();
var markerAnnotation = MarkerAnnotation.all.first;
size = size + MarkerAnnotation.all.size();
var wildcardType = WildcardType.all.first;
size = size + WildcardType.all.size();
var booleanLiteral = BooleanLiteral.all.first;
size = size + BooleanLiteral.all.size();
var iJavaModel = IJavaModel.all.first;
size = size + IJavaModel.all.size();
var variableDeclarationExpression = VariableDeclarationExpression.all.first;
size = size + VariableDeclarationExpression.all.size();
var typeDeclarationStatement = TypeDeclarationStatement.all.first;
size = size + TypeDeclarationStatement.all.size();
var iJavaProject = IJavaProject.all.first;
size = size + IJavaProject.all.size();
size.println();
m.allContents().size().println();