model Core driver EMF {nsuri = "org.amma.dsl.jdt.core"};
model DOM driver EMF {nsuri = "org.amma.dsl.jdt.dom"};
model PrimitiveTypes driver EMF {nsuri = "org.amma.dsl.jdt.primitiveTypes"};
var size = 0;
var emptyStatement = EmptyStatement.all.first;
size = size + EmptyStatement.all.size();
var modifier = Modifier.all.first;
size = size + Modifier.all.abstract.size();
size = size + Modifier.all.final.size();
size = size + Modifier.all.native.size();
size = size + Modifier.all.none.size();
size = size + Modifier.all.private.size();
size = size + Modifier.all.protected.size();
size = size + Modifier.all.public.size();
size = size + Modifier.all.static.size();
size = size + Modifier.all.strictfp.size();
size = size + Modifier.all.synchronized.size();
size = size + Modifier.all.transient.size();
size = size + Modifier.all.volatile.size();
size = size + Modifier.all.size();
var infixExpression = InfixExpression.all.first;
size = size + InfixExpression.all.resolveBoxing.size();
size = size + InfixExpression.all.resolveUnboxing.size();
size = size + InfixExpression.all.typeBinding.size();
size = size + InfixExpression.all.extendedOperands.size();
size = size + InfixExpression.all.leftOperand.size();
size = size + InfixExpression.all.operator.size();
size = size + InfixExpression.all.rightOperand.size();
size = size + InfixExpression.all.size();
var qualifiedName = QualifiedName.all.first;
size = size + QualifiedName.all.resolveBoxing.size();
size = size + QualifiedName.all.resolveUnboxing.size();
size = size + QualifiedName.all.typeBinding.size();
size = size + QualifiedName.all.fullyQualifiedName.size();
size = size + QualifiedName.all.name.size();
size = size + QualifiedName.all.qualifier.size();
size = size + QualifiedName.all.size();
var iJavaModel = IJavaModel.all.first;
size = size + IJavaModel.all.path.size();
size = size + IJavaModel.all.isReadOnly.size();
size = size + IJavaModel.all.javaProjects.size();
size = size + IJavaModel.all.externalPackageFragmentRoots.size();
size = size + IJavaModel.all.size();
var arrayInitializer = ArrayInitializer.all.first;
size = size + ArrayInitializer.all.resolveBoxing.size();
size = size + ArrayInitializer.all.resolveUnboxing.size();
size = size + ArrayInitializer.all.typeBinding.size();
size = size + ArrayInitializer.all.expressions.size();
size = size + ArrayInitializer.all.size();
var constructorInvocation = ConstructorInvocation.all.first;
size = size + ConstructorInvocation.all.arguments.size();
size = size + ConstructorInvocation.all.typeArguments.size();
size = size + ConstructorInvocation.all.size();
var fieldDeclaration = FieldDeclaration.all.first;
size = size + FieldDeclaration.all.modifiers.size();
size = size + FieldDeclaration.all.javadoc.size();
size = size + FieldDeclaration.all.fragments.size();
size = size + FieldDeclaration.all.type.size();
size = size + FieldDeclaration.all.size();
size.println();
